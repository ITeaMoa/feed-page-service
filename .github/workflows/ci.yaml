name: CI - Feedpage Service

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

permissions: 
  contents: write

env:
  REGISTRY: iteamoa.kr.ncr.ntruss.com   # NCR registry host
  IMAGE: feed                              # repo/image name in NCR         

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Ncloud Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.NCLOUD_ACCESS_KEY }}     # add to repo secrets
          password: ${{ secrets.NCLOUD_SECRET_KEY }}     # add to repo secrets
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build JAR
        run: |
          cd demo
          ./gradlew clean build

      - name: Verify jar exists
        run: ls -l demo/build/libs

      # Single build+push (linux/amd64) FROM demo/ and demo/Dockerfile
      - name: Build and Push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          context: demo
          file: demo/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.SHORT_SHA }}
          build-args: |
            AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}
            AWS_DYNAMODB_TABLE=${{ secrets.AWS_DYNAMODB_TABLE }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Update your k8s manifest with the new image tag
      - name: Install yq
        uses: mikefarah/yq@v4.44.3

      - name: Update image in deployment manifest
        run: |
          yq -i '.spec.template.spec.containers[0].image = "'"${REGISTRY}/${IMAGE}:${SHORT_SHA}"'"' k8s/deployment.yaml
      
      - name: Commit and push updated deployment
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add demo/k8s/deployment.yaml
          git commit -m "Update feedpage image to ${SHORT_SHA}" || echo "No changes to commit"
          git push





# name: CI - Feedpage Service

# on:
#   push:
#     branches:
#       - main  # Trigger workflow on push to the main branch

# permissions: 
#   contents: write

# env:
#   REGISTRY: iteamoa.kr.ncr.ntruss.com   # NCR registry host
#   IMAGE: feedpage                              # repo/image name in NCR         

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
        
#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

#       - name: Login to Ncloud Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ secrets.NCLOUD_ACCESS_KEY }}     # add to repo secrets
#           password: ${{ secrets.NCLOUD_SECRET_KEY }}     # add to repo secrets
      
#       - name: Set up Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build JAR
#         run: |
#           cd demo
#           ./gradlew clean build
          
#       - name: Set short SHA
#         run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

#       - name: Build Docker image
#         run: |  # \이거 뒤에 공백있으면 안됨.  -f demo/Dockerfile \ 이거 없으면 안됨. dir이 달라서.
#           docker build \
#             --build-arg AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }} \
#             --build-arg AWS_DYNAMODB_TABLE=${{ secrets.AWS_DYNAMODB_TABLE }} \
#             --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
#             --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
#             -f demo/Dockerfile \
#             -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/iteamoa/feedpage:${SHORT_SHA} .
      
#       # Build & push as linux/amd64 so it always matches your NKS nodes
#       - name: Build and Push (linux/amd64)
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           push: true
#           platforms: linux/amd64
#           tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.SHORT_SHA }}
#           build-args: |
#             AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}
#             AWS_TABLE=${{ secrets.AWS_TABLE }}
#             AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}
#             AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       # Update your k8s manifest with the new image tag
#       - name: Install yq
#         uses: mikefarah/yq@v4.44.3

#       - name: Update image in deployment manifest
#         run: |
#           yq -i '.spec.template.spec.containers[0].image = "'"${REGISTRY}/${IMAGE}:${SHORT_SHA}"'"' k8s/deployment.yaml
      
#       - name: Commit and push updated deployment
#         run: |
#           git config --global user.email "github-actions@github.com"
#           git config --global user.name "GitHub Actions"
#           git add demo/k8s/feed-page-deployment.yaml
#           git commit -m "Update feedpage image to ${SHORT_SHA}" || echo "No changes to commit"
#           git push
